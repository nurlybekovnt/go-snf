language: go

# Force-enable Go modules. This will be unnecessary when Go 1.12 lands.
# env:
  # - GO111MODULE=on

# You don't need to test on very old version of the Go compiler. It's the user's
# responsibility to keep their compilers up to date.
go:
  - 1.11.x

# Only clone the most recent commit.
git:
  depth: 1

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
before_script:
  # - sudo apt-get update
  # - sudo apt-get install -y libpcap-dev
  # - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.13.2
  - go get -d ./...
  - go get -u github.com/client9/misspell/cmd/misspell
  - go get -u github.com/fzipp/gocyclo
  - go get -u golang.org/x/lint/golint
  - go get -u github.com/gordonklaus/ineffassign

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  - cd snf
  # - go build
  - misspell -error .
  # - golangci-lint run -E gofmt -E gocyclo --tests=false
  # - go vet
  - test -z $(gofmt -l -s .)
  - gocyclo .
  - ineffassign .
  - golint . || (exit 0)
